/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely';

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type Numeric = ColumnType<string, number | string, number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Instruments {
  id: Generated<number>;
  name: string | null;
  ticker: string | null;
  type: string | null;
}

export interface Marketdata {
  close: Numeric | null;
  date: Timestamp | null;
  high: Numeric | null;
  id: Generated<number>;
  instrumentid: number | null;
  low: Numeric | null;
  open: Numeric | null;
  previousclose: Numeric | null;
}

export interface Orders {
  datetime: Timestamp | null;
  id: Generated<number>;
  instrumentid: number | null;
  price: Numeric | null;
  side: string | null;
  size: number | null;
  status: string | null;
  type: string | null;
  userid: number | null;
}

export interface Users {
  accountnumber: string | null;
  email: string | null;
  id: Generated<number>;
}

export interface DB {
  instruments: Instruments;
  marketdata: Marketdata;
  orders: Orders;
  users: Users;
}
